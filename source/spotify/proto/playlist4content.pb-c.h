/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: playlist4content.proto */

#ifndef PROTOBUF_C_playlist4content_2eproto__INCLUDED
#define PROTOBUF_C_playlist4content_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "playlist4meta.pb-c.h"
#include "playlist4issues.pb-c.h"

typedef struct Item Item;
typedef struct ListItems ListItems;
typedef struct ContentRange ContentRange;
typedef struct ListContentSelection ListContentSelection;


/* --- enums --- */


/* --- messages --- */

struct  Item
{
  ProtobufCMessage base;
  char *uri;
  ItemAttributes *attributes;
};
#define ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&item__descriptor) \
    , NULL, NULL }


struct  ListItems
{
  ProtobufCMessage base;
  protobuf_c_boolean has_pos;
  int32_t pos;
  protobuf_c_boolean has_truncated;
  protobuf_c_boolean truncated;
  size_t n_items;
  Item **items;
};
#define LIST_ITEMS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&list_items__descriptor) \
    , 0, 0, 0, 0, 0,NULL }


struct  ContentRange
{
  ProtobufCMessage base;
  protobuf_c_boolean has_pos;
  int32_t pos;
  protobuf_c_boolean has_length;
  int32_t length;
};
#define CONTENT_RANGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&content_range__descriptor) \
    , 0, 0, 0, 0 }


struct  ListContentSelection
{
  ProtobufCMessage base;
  protobuf_c_boolean has_wantrevision;
  protobuf_c_boolean wantrevision;
  protobuf_c_boolean has_wantlength;
  protobuf_c_boolean wantlength;
  protobuf_c_boolean has_wantattributes;
  protobuf_c_boolean wantattributes;
  protobuf_c_boolean has_wantchecksum;
  protobuf_c_boolean wantchecksum;
  protobuf_c_boolean has_wantcontent;
  protobuf_c_boolean wantcontent;
  ContentRange *contentrange;
  protobuf_c_boolean has_wantdiff;
  protobuf_c_boolean wantdiff;
  protobuf_c_boolean has_baserevision;
  ProtobufCBinaryData baserevision;
  protobuf_c_boolean has_hintrevision;
  ProtobufCBinaryData hintrevision;
  protobuf_c_boolean has_wantnothingifuptodate;
  protobuf_c_boolean wantnothingifuptodate;
  protobuf_c_boolean has_wantresolveaction;
  protobuf_c_boolean wantresolveaction;
  size_t n_issues;
  ClientIssue **issues;
  size_t n_resolveaction;
  ClientResolveAction **resolveaction;
};
#define LIST_CONTENT_SELECTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&list_content_selection__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, NULL, 0, 0, 0, {0,NULL}, 0, {0,NULL}, 0, 0, 0, 0, 0,NULL, 0,NULL }


/* Item methods */
void   item__init
                     (Item         *message);
size_t item__get_packed_size
                     (const Item   *message);
size_t item__pack
                     (const Item   *message,
                      uint8_t             *out);
size_t item__pack_to_buffer
                     (const Item   *message,
                      ProtobufCBuffer     *buffer);
Item *
       item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   item__free_unpacked
                     (Item *message,
                      ProtobufCAllocator *allocator);
/* ListItems methods */
void   list_items__init
                     (ListItems         *message);
size_t list_items__get_packed_size
                     (const ListItems   *message);
size_t list_items__pack
                     (const ListItems   *message,
                      uint8_t             *out);
size_t list_items__pack_to_buffer
                     (const ListItems   *message,
                      ProtobufCBuffer     *buffer);
ListItems *
       list_items__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   list_items__free_unpacked
                     (ListItems *message,
                      ProtobufCAllocator *allocator);
/* ContentRange methods */
void   content_range__init
                     (ContentRange         *message);
size_t content_range__get_packed_size
                     (const ContentRange   *message);
size_t content_range__pack
                     (const ContentRange   *message,
                      uint8_t             *out);
size_t content_range__pack_to_buffer
                     (const ContentRange   *message,
                      ProtobufCBuffer     *buffer);
ContentRange *
       content_range__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   content_range__free_unpacked
                     (ContentRange *message,
                      ProtobufCAllocator *allocator);
/* ListContentSelection methods */
void   list_content_selection__init
                     (ListContentSelection         *message);
size_t list_content_selection__get_packed_size
                     (const ListContentSelection   *message);
size_t list_content_selection__pack
                     (const ListContentSelection   *message,
                      uint8_t             *out);
size_t list_content_selection__pack_to_buffer
                     (const ListContentSelection   *message,
                      ProtobufCBuffer     *buffer);
ListContentSelection *
       list_content_selection__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   list_content_selection__free_unpacked
                     (ListContentSelection *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Item_Closure)
                 (const Item *message,
                  void *closure_data);
typedef void (*ListItems_Closure)
                 (const ListItems *message,
                  void *closure_data);
typedef void (*ContentRange_Closure)
                 (const ContentRange *message,
                  void *closure_data);
typedef void (*ListContentSelection_Closure)
                 (const ListContentSelection *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor item__descriptor;
extern const ProtobufCMessageDescriptor list_items__descriptor;
extern const ProtobufCMessageDescriptor content_range__descriptor;
extern const ProtobufCMessageDescriptor list_content_selection__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_playlist4content_2eproto__INCLUDED */
