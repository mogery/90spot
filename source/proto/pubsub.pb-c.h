/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: pubsub.proto */

#ifndef PROTOBUF_C_pubsub_2eproto__INCLUDED
#define PROTOBUF_C_pubsub_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Subscription Subscription;


/* --- enums --- */


/* --- messages --- */

struct  Subscription
{
  ProtobufCMessage base;
  char *uri;
  protobuf_c_boolean has_expiry;
  int32_t expiry;
  protobuf_c_boolean has_status_code;
  int32_t status_code;
};
#define SUBSCRIPTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&subscription__descriptor) \
    , NULL, 0, 0, 0, 0 }


/* Subscription methods */
void   subscription__init
                     (Subscription         *message);
size_t subscription__get_packed_size
                     (const Subscription   *message);
size_t subscription__pack
                     (const Subscription   *message,
                      uint8_t             *out);
size_t subscription__pack_to_buffer
                     (const Subscription   *message,
                      ProtobufCBuffer     *buffer);
Subscription *
       subscription__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   subscription__free_unpacked
                     (Subscription *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Subscription_Closure)
                 (const Subscription *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor subscription__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_pubsub_2eproto__INCLUDED */
